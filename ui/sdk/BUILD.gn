declare_args() {
  enable_python = true
}

shared_library("uisdk") {
  output_dir = "$root_out_dir/bin"

    cflags = []
    ldflags = []
    libs = []
    lib_dirs = []

    if (is_clang) {
      cflags+= [
        "-Wno-deprecated-declarations"
      ]
    }
    if (is_debug && (is_mac || is_linux)) {
      cflags += ["-g", "-O0"]
    }

    defines = ["UI_EXPORTS"]
    deps = [
      "//ui/gpu:uigpu",
      ":copy_skia"
    ]

    include_dirs = [
        "//",
        "//ui/",
        "//ui/sdk/",
        "//third_party/skia/src/",
        "//third_party/skia/src/include/core/",
    ]

    if (enable_python) {
      # Python deps
      # defines += ["HAVE_WCHAR_H"]


      PYTHON_INC_DIR = exec_script("//script/get_env.py", ["PYTHON_INC_DIR"], "string")
      PYTHON_LIB_DIR = exec_script("//script/get_env.py", ["PYTHON_LIB_DIR"], "string")

      if (is_mac) {
        cflags += [
          "-isystem",
          PYTHON_INC_DIR
        ]
        ldflags += [
          "-L" + PYTHON_LIB_DIR
        ]
        libs += [
          "python3.9"
        ]
      }
      else if (is_win) {
        include_dirs += [ PYTHON_INC_DIR ]
        lib_dirs += [ PYTHON_LIB_DIR ]
        if (is_debug) {
          libs += [
            "python38_d.lib",
            "python3_d.lib"
          ]
        } else {
            libs += [
            "python38.lib",
            "python3.lib"
          ]
        }
      }
      else if (is_linux) {
        include_dirs += [ PYTHON_INC_DIR ]
        lib_dirs += [ PYTHON_LIB_DIR ]

        libs += [
          "python3.12"
        ]
      }
    }

    lib_dirs += ["$root_build_dir/bin"]
    if (is_win) {
      libs += [
        "atls.lib",  # ATL
        "Shcore.lib", 
        "skia.dll.lib",
      ]
    }
    else if (is_mac ) {
      libs += ["skia"]
    } else if (is_linux) {
      libs += ["skia"]
    }
    
   
    sources = [
        # "//ui/3rd/zip/unzip.cpp",
        # "//ui/3rd/zip/zip.cpp",
        # "//ui/3rd/zip/ziputil.cpp",
        "//ui/3rd/pugixml/pugixml.cpp",

        "include/common/math/math.cpp",
        "include/common/math/matrix.cpp",
        "include/common/math/quad.cpp",
        "src/animate/animate.cpp",
        "src/animate/ease/easing.cpp",
        "src/animate/ianimate.cpp",
        "src/animate/storyboard.cpp",
        "src/animate/timeline.cpp",
        "src/application/config/config.h",
        "src/application/config/config.cpp",
        "src/application/uiapplication.cpp",
        "src/application/iuiapplication.cpp",
        "src/attribute/9region_attribute.cpp",
        "src/attribute/attribute.cpp",
        "src/attribute/attributebase.cpp",
        "src/attribute/attribute_alias.cpp",
        "src/attribute/iattribute.cpp",
        "src/attribute/bool_attribute.cpp",
        "src/attribute/color_attribute.cpp",
        "src/attribute/enum_attribute.cpp",
        "src/attribute/flags_attribute.cpp",
        "src/attribute/int_attribute.cpp",
        "src/attribute/length_attribute.cpp",
        "src/attribute/rect_attribute.cpp",
        "src/attribute/renderbase_attribute.cpp",
        "src/attribute/stringselect_attribute.cpp",
        "src/attribute/size_attribute.cpp",
        "src/attribute/string_attribute.cpp",
        "src/attribute/textrenderbase_attribute.cpp",
        "src/control/control.cpp",
        "src/control/icontrol.cpp",
        "src/graphics/bitmap/skiabitmap.cpp",
        "src/graphics/renderlibrary.cpp",
        "src/graphics/skia/skia_render.cpp",
        "src/graphics/skia/skia_bitmap.cpp",
        "src/graphics/font/font.h",
        "src/graphics/font/font.cpp",
        "src/helper/iuiinterface.cpp",
        "src/helper/topwindow/topwindowmanager.cpp",
        "src/helper/version/versionhelper.cpp",
        "src/helper/scale/scale_factor.cpp",
        "src/layer/compositor.cpp",
        "src/layer/layer.cpp",
        "src/layer/ilayer.cpp",
        "src/layer/transform3d.cpp",
        "src/layer/windowrender.cpp",
        "src/layer/hardware_compositor.cpp",
        "src/layer/software_compositor.cpp",
        "src/layer/hardware_layer.cpp",
        "src/layer/software_layer.cpp",
        "src/layout/averagelayout.cpp",
        "src/layout/canvaslayout.cpp",
        "src/layout/cardlayout.cpp",
        "src/layout/desktop_layout.cpp",
        "src/layout/gridlayout.cpp",
        "src/layout/horzlayout.cpp",
        "src/layout/vertlayout.cpp",
        "src/layout/layout.cpp",
        "src/layout/layout_factory.cpp",
        "src/message_loop/message_loop.cpp",
        "src/object/layout/layout_object.cpp",
        "src/object/layout/layout_object.h",
        "src/object/message.cpp",
        "src/object/imessage.cpp",
        "src/object/iobject.cpp",
        "src/object/object.cpp",
        "src/object/objtree.cpp",
        "src/object/object_attrib.cpp",
        "src/object/object_layer.cpp",
        "src/object/object_rect.cpp",
        "src/object/object_render.cpp",
        "src/object/object_animate.cpp",
        "src/panel/root_object.cpp",
        "src/panel/root_object.h",
        "src/panel/ipanel.cpp",
        "src/panel/panel.cpp",
        "src/panel/panel.h",
        "src/panel/round_panel.cpp",
        "src/python/py_application.cpp",
        "src/python/py_events.cpp",
        "src/python/py_module.cpp",
        "src/python/py_window.cpp",
        "src/render/colorrender/colorrender.cpp",
        "src/render/colorrender/icolorrender.cpp",
        "src/render/imagerender/iimagerender.cpp",
        "src/render/imagerender/imagerender.cpp",
        "src/render/irenderbase.cpp",
        "src/render/renderbase.cpp",
        "src/render/renderbase_factory.cpp",
        "src/render/textrender/itextrenderbase.cpp",
        "src/render/textrender/textrender.cpp",
        "src/render/textrender/textrender_factory.cpp",
        "src/resource/colormanager.cpp",
        "src/resource/colorres.cpp",
        # "src/resource/gifres.cpp",
        "src/resource/i18nres.cpp",
        "src/resource/imagemanager.cpp",
        "src/resource/imageres.cpp",
        "src/resource/resource_manager.cpp",
        "src/resource/iuires.cpp",
        "src/resource/i18nmanager.cpp",
        "src/resource/layoutmanager.cpp",
        "src/resource/res_bundle.cpp",
        "src/resource/stylemanager.cpp",
        "src/resource/styleres.cpp",
        "src/skin_parse/datasource/File/filedatasource.cpp",
        "src/skin_parse/datasource/File/filebufferreader.cpp",
        "src/skin_parse/datasource/skindatasource.cpp",
        "src/skin_parse/mapattr/mapattr.cpp",
        "src/skin_parse/skinparseengine.cpp",
        "src/skin_parse/xml/ixmlwrap.cpp",
        "src/skin_parse/xml/pugixmlwrap/pugixmlwrap.cpp",
        "src/skin_parse/xml/xmlwrap.cpp",
        "src/util/color.cpp",
        "src/util/log/log.cpp",
        "src/util/DPI/dpihelper.cpp",
        "src/util/struct.cpp",
        "src/util/util.cpp",
        "src/util/uiapi.cpp",
        "src/util/rectregion/rectregion.cpp",
        "src/util/path.cpp",
        "src/window/iwindow.cpp",
        "src/window/window.h",
        "src/window/window.cpp",
        "src/window/window_attrib.cpp",
        "src/window/window_mouse_key.h",
        "src/window/window_mouse_key.cpp",
        "src/window/window_dpi.h",
        "src/window/window_dpi.cpp",
    ]

    # common controls
    sources += [
      "src/control/text/label.h",
      "src/control/text/label.cpp",
    ]

    if (is_linux) {
      cflags += exec_script("//build_tools/gn/pkg-config.py", ["--cflags", "glib-2.0"], "value")
    }

    if (is_win) {
      sources += [
        "src/message_loop/message_loop_win.cpp",
        "src/message_loop/win/msghelper.cpp",
        "src/window/window_win.h",
        "src/window/window_win.cpp",
      ]
      #libs += [
      #  "skia.dll",
      #]
    }
    if (is_linux) {
        sources += [
            "src/window/window_linux_x11.cpp",
            "src/window/window_linux_x11.h",
            "src/window/linux/display_x11.cpp",
            "src/window/linux/display_x11.h",
            "src/message_loop/message_loop_linux.cpp",
            "src/message_loop/message_loop_linux.h",

            "src/window/window_linux_wayland.cpp",
            "src/window/window_linux_wayland.h",    
            "src/window/linux/display_wayland.cpp",
            "src/window/linux/display_wayland.h",
            "src/message_loop/message_loop_linux_wayland.cpp",
            "src/message_loop/message_loop_linux_wayland.h",

            # wayland-scanner client-header /usr/share/wayland-protocols/stable/xdg-shell/xdg-shell.xml xdg-shell-client-protocol.h
            # wayland-scanner private-code /usr/share/wayland-protocols/stable/xdg-shell/xdg-shell.xml xdg-shell-protocol.c
            "src/window/linux/xdg-shell-client-protocol.h",
            "src/window/linux/xdg-shell-protocol.c",
        ]
        libs += [
            "glib-2.0",
            "X11",

            # XRandR (X Resize, Rotate and Reflection) 是 X11 的标准扩展
            # "Xrandr",


            "wayland-client",
        ]
    }
    if (is_mac) {
        sources += [
            "src/window/window_mac.mm",
            "src/message_loop/message_loop_mac.mm",
        ]
    }

    if (is_mac) {
        sources += [
            "src/application//application_mac.mm",
        ]
        # skia Mac 依赖
        ldflags += [
            "-framework", "CoreFoundation",
            "-framework", "CoreGraphics",
            "-framework", "CoreText",
            "-framework", "CoreServices",
            "-framework", "Cocoa",
            "-framework", "QuartzCore",  # Core Animation
        ]
    }


    # 单元测试
    if (is_debug) {
      defines += ["UI_UNITTEST"]
      sources += [
        "test/test_entry.cpp",
        "include/common/signalslot/signalslot_unittest.cpp",
        "include/common/ptr/weakptr_unittest.cpp",
        "src/message_loop/message_loop_unittest.cpp",
        "src/util/rectregion/rectregion_unittest.cpp",
        "include/common/uuid/uuid_unittest.cpp",
        "src/util/color_test.cpp",
      ]
    }
}


# skia
# 将依赖库拷贝到out/debug目录下
copy("copy_skia") {
  if (is_mac) { 
    if (is_debug) {
        sources = ["//third_party/skia/src/out/debug/libskia.dylib"]
    } else {
        sources = ["//third_party/skia/src/out/release/libskia.dylib"]
    }
  } else if (is_win) {
    if (is_debug) {
      sources = [
          "//third_party\skia\src\out\debug\skia.dll",
          "//third_party\skia\src\out\debug\skia.dll.lib"
      ]
    } else {
      sources = [
        "//third_party/skia/src/out/release/skia.dll",
        "//third_party/skia/src/out/release/skia.dll.lib"
      ]
    }
  } else if (is_linux) {
    if (is_debug) {
      sources = [ "//third_party/skia/src/out/debug/libskia.so" ]
    } else {
      sources = [ "//third_party/skia/src/out/release/libskia.so" ]
    }
  }
  outputs = ["$root_build_dir/bin/{{source_file_part}}"]
}


group("sdk") {
  deps = [
    ":uisdk"
  ]
}


#######################################

if (is_debug) {
executable("uisdk_unittest") {
  output_dir = "$root_out_dir/bin"
  deps = [
    "//ui/sdk:uisdk"
  ]

  cflags = []
  if (is_debug || (is_mac||is_linux)) {
    cflags = ["-g"]
  }
  include_dirs = [
    "//ui/",
    "//ui/sdk/",
    "//third_party/skia/src",
  ]
  sources = [
    "test/test_main.cpp"
  ]
}
group("sdk_test") {
  deps = [
    ":uisdk_unittest"
  ]
}

}