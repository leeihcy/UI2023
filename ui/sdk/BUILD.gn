
use_linux_msgloop = false

shared_library("uisdk") {
    cflags = []
    if (is_debug) {
      cflags += ["-g"]
    }

    defines = ["UI_EXPORTS"]
    
    if (use_linux_msgloop) {
        defines += ["USE_LINUX_MSGLOOP"]
    }

    include_dirs = [
        "//",
        "//ui/sdk",
        "//ui/sdk/include",
        "//ui/sdk/src",
        "//ui/3rd/skia/",
        "//ui/3rd/skia/include/core/"
    ]
  
    lib_dirs = ["$root_build_dir/"]

    # 将依赖库拷贝到out/debug目录下
    libs = ["skia"]
    copy("lib_deps") {
      sources = ["//ui/3rd/skia/src/out/dylib/libskia.dylib"]
      outputs = ["$root_build_dir/"]
      
    }

    # 直接在当前目录查找libskia.dylib
    ldflags = [
      "-rpath", ".",
    ]

    cflags += exec_script("//build/pkg-config.py", ["--cflags", "glib-2.0"], "value")
    sources = [
        # "//ui/3rd/zip/unzip.cpp",
        # "//ui/3rd/zip/zip.cpp",
        # "//ui/3rd/zip/ziputil.cpp",
        "//ui/3rd/pugixml/pugixml.cpp",

        "include/common/math/math.cpp",
        "include/common/math/matrix.cpp",
        "include/common/math/quad.cpp",
        "src/animate/animatemgr.cpp",
        "src/animate/ease/easing.cpp",
        "src/animate/ianimate.cpp",
        "src/animate/storyboard.cpp",
        "src/animate/timeline.cpp",
        "src/animate/wrap/animate.cpp",
        "src/application/uiapplication.cpp",
        "src/application/iuiapplication.cpp",
        "src/attribute/9region_attribute.cpp",
        "src/attribute/attribute.cpp",
        "src/attribute/attributebase.cpp",
        "src/attribute/attribute_alias.cpp",
        "src/attribute/attribute_wrap.cpp",
        "src/attribute/bool_attribute.cpp",
        "src/attribute/color_attribute.cpp",
        "src/attribute/enum_attribute.cpp",
        "src/attribute/flags_attribute.cpp",
        "src/attribute/long_attribute.cpp",
        "src/attribute/rect_attribute.cpp",
        "src/attribute/renderbase_attribute.cpp",
        "src/attribute/stringselect_attribute.cpp",
        "src/attribute/size_attribute.cpp",
        "src/attribute/string_attribute.cpp",
        "src/attribute/textrenderbase_attribute.cpp",
        "src/graphics/renderlibrary.cpp",
        "src/graphics/skia/skia_render.cpp",
        "src/helper/iuiinterface.cpp",
        "src/helper/topwindow/topwindowmanager.cpp",
        "src/helper/version/versionhelper.cpp",
        "src/layer/compositor.cpp",
        "src/layer/layer.cpp",
        "src/layer/ilayer.cpp",
        "src/layer/transform3d.cpp",
        "src/layer/windowrender.cpp",
        "src/layer/hardware_compositor.cpp",
        "src/layer/software_compositor.cpp",
        "src/layer/hardware_layer.cpp",
        "src/layer/software_layer.cpp",
        "src/layout/averagelayout.cpp",
        "src/layout/canvaslayout.cpp",
        "src/layout/cardlayout.cpp",
        "src/layout/gridlayout.cpp",
        "src/layout/horzlayout.cpp",
        "src/layout/vertlayout.cpp",
        "src/layout/layout.cpp",
        "src/layout/layout_factory.cpp",
        "src/message_loop/message_loop.cpp",
        "src/object/message.cpp",
        "src/object/imessage.cpp",
        "src/object/iobject.cpp",
        "src/object/object.cpp",
        "src/object/objtree.cpp",
        "src/object/object_attrib.cpp",
        "src/object/object_layer.cpp",
        "src/object/object_rect.cpp",
        "src/object/object_render.cpp",
        "src/object/object_animate.cpp",
        "src/render/colorrender/colorrender.cpp",
        "src/render/colorrender/icolorrender.cpp",
        "src/render/imagerender/iimagerender.cpp",
        "src/render/imagerender/imagerender.cpp",
        "src/render/irenderbase.cpp",
        "src/render/renderbase.cpp",
        "src/render/renderbase_factory.cpp",
        "src/render/textrender/itextrenderbase.cpp",
        "src/render/textrender/textrender.cpp",
        "src/render/textrender/textrender_factory.cpp",
        "src/resource/colormanager.cpp",
        "src/resource/colorres.cpp",
        "src/resource/fontmanager.cpp",
        "src/resource/fontres.cpp",
        # "src/resource/gifres.cpp",
        "src/resource/i18nres.cpp",
        "src/resource/imagemanager.cpp",
        "src/resource/imageres.cpp",
        "src/resource/resource_manager.cpp",
        "src/resource/iuires.cpp",
        "src/resource/i18nmanager.cpp",
        "src/resource/layoutmanager.cpp",
        "src/resource/res_bundle.cpp",
        "src/resource/stylemanager.cpp",
        "src/resource/styleres.cpp",
        "src/skin_parse/datasource/File/filedatasource.cpp",
        "src/skin_parse/datasource/File/filebufferreader.cpp",
        "src/skin_parse/datasource/skindatasource.cpp",
        "src/skin_parse/mapattr/mapattr.cpp",
        "src/skin_parse/skinparseengine.cpp",
        "src/skin_parse/xml/ixmlwrap.cpp",
        "src/skin_parse/xml/pugixmlwrap/pugixmlwrap.cpp",
        "src/skin_parse/xml/xmlwrap.cpp",
        "src/util/color.cpp",
        "src/util/log/log.cpp",
        "src/util/DPI/dpihelper.cpp",
        "src/util/struct.cpp",
        "src/util/util.cpp",
        "src/util/uiapi.cpp",
        "src/util/rect_array/rectarray.cpp",
        "src/window/window.cpp",
        "src/window/iwindow.cpp",
    ]
    if (is_linux || use_linux_msgloop) {
        sources += [
            "src/window/window_linux.cpp",
            "src/window/linux/display.cpp",
            "src/message_loop/message_loop_linux.cpp",
        ]
        libs += [
            "glib-2.0",
            "x11"
        ]
    }
    if (is_mac && !use_linux_msgloop) {
        sources += [
            "src/window/window_mac.mm",
            "src/message_loop/message_loop_mac.mm",
        ]
    }

    if (is_mac) {
        sources += [
            "src/application//application_mac.mm",
        ]
        # skia Mac 依赖
        ldflags += [
            "-framework", "CoreFoundation",
            "-framework", "CoreGraphics",
            "-framework", "CoreText",
            "-framework", "CoreServices",
            "-framework", "Cocoa",
        ]
    }
}

group("sdk") {
    deps = [
        ":uisdk"
    ]
}

#######################################

config("unittest_common") {
  if (is_debug) {
    cflags = ["-g"]
  }
}

executable("signalslot_unittest") {
    include_dirs = [
        "//ui/sdk/include",
    ]
    public_configs = [":unittest_common"]
    sources = ["include/common/signalslot/signalslot_unittest.cpp"]
}
executable("weakptr_unittest") {
    include_dirs = [
        "//ui/sdk/include",
    ]
    public_configs = [":unittest_common"]
    sources = ["include/common/weakptr/weakptr_unittest.cpp"]
}
executable("message_loop_unittest") {
    include_dirs = [
        "//ui/sdk/include",
    ]
    if (use_linux_msgloop) {
        defines = ["USE_LINUX_MSGLOOP"]
    }

    public_configs = [":unittest_common"]
    libs = ["glib-2.0"]
    cflags = exec_script("//build/pkg-config.py", ["--cflags", "glib-2.0"], "value")
    sources = [
        "src/message_loop/message_loop.cpp",
        "src/message_loop/message_loop_unittest.cpp"
    ]
    if (is_linux || use_linux_msgloop) {
        sources += [
            "src/window/linux/display.cpp",
            "src/message_loop/message_loop_linux.cpp"
            ]
        libs += [
            "glib-2.0",
            "x11"
        ]
    }
    else if (is_mac) {
        sources += [
            "src/message_loop/message_loop_mac.mm",
        ]
    }


    if (is_mac) {
        sources += [
            "src/application/application_mac.mm",
        ]
        # skia Mac 依赖
        ldflags = [
            "-framework", "CoreFoundation",
            "-framework", "CoreGraphics",
            "-framework", "CoreText",
            "-framework", "CoreServices",
            "-framework", "Cocoa",
        ]
    }
}

group("unittest") {
    deps = [
        ":signalslot_unittest",
        ":weakptr_unittest",
        ":message_loop_unittest"
    ]
}